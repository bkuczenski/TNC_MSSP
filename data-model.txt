MSSP ENGINE DATA MODEL

In-Memory:

 * ElementSet of Attributes
 * ElementSet of Notes

 * pd.Series of questions with references and valid answers and satisfied
 * pd.Series of targets with reference and type

 * pd.DataFrame of QuestionID:AttributeID
 * pd.DataFrame of TargetID:AttributeID

 * pd.DataFrame of QuestionID:ordinal threshold:TargetID (criteria)
 * pd.DataFrame of QuestionID:TargetID:ordinal index:NoteID (caveats)

What about "satisfies"? Questions have satisfied pointer- if not null, then follow it. 

Serialized:
 * List of Questions
   - ID
   - attributes spelled out
   - answers written out in sequence
 * List of Targets
   - ID
   - type specified
   - attributes spelled out
 * List of Criteria
   - QID
   - TID
   - threshold spelled out
 * List of Caveats
   group by: 
   - QID
   - TID
   [ 
     - answer sense
     - Note + color + score
   ]

De-serialized:
 * load all files into e.g. data frames
 * collect all listed attributes in an element set
 * collect all listed notes in an element set
 * 

A listing of data types used to serialize the Monitoring, Assessment, and
Harvest Control Rules spreadsheets.

Attributes -- an enumeration of unique text strings- the vocabulary
describing the entities.

Targets -- easy-to-create enumeration of target entities, their type
(Monitoring, Assessment, ControlRule) and a list of attributes- since
attributes are just text strings anyway.


Questions -- de-duplicated enumeration of questions with ordered lists of
valid answers. The order will be initially populated arbitrarily (by
order encountered) and will be corrected by hand.

Generating the de-duplicated question list requires using the spreadsheets
plus a list of synonym and satisfies statements (themselves indexed with
literal spreadsheet references). This in turn will require the "satisfies"
predicates to be created and their ancestral references removed.

Notations -- an enumeration of unique SCORED notation strings that appear
in the table data.  The scores are determined from background color
according to a predefined rubric.

Criteria -- a table of foreign keys: Question-ID, Target-ID, threshold,
where threshold is one of the valid_answers to the referenced question.

Caveats -- a table of grid data: Question-ID, question-sense, Target-ID,
note-ID (or more usefully for the serialization note-text, note-score)

And that's it.


External resources required:
 - mapping of 'synonym' and 'satisfies' questions
 - mapping of RGB color specs to scores
